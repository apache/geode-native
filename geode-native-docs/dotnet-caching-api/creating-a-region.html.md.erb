---
title:  Creating a Region
---

<!--
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

To create a region, use `RegionFactory` with the `RegionShortcut` that most closely fits the region configuration.

From that point, customize the settings for region attributes as needed.

Creating a region using the client API only creates a proxy client side region. A corresponding region with the same name and path must also exist on the servers that have been configured for client connections and upon which the client will perform its operations.

## Creating a CACHING\_PROXY Region

This example creates a region using the CACHING\_PROXY shortcut with no further modifications:

``` pre
RegionFactory regionFactory =
    cache.CreateRegionFactory(RegionShortcut.CACHING_PROXY);
 
IRegion<string, string> region = regionFactory
    .Create<string, string>("exampleRegion");
```

## Creating a CACHING\_PROXY Region with LRU

This example creates a region based on the CACHING\_PROXY shortcut, modifying values for two region attributes. For information on the settings, see [Region Attributes Descriptions](../client-cache/region-attributes-desc.html#region-attributes-desc).

``` pre
RegionFactory regionFactory =
    cache.CreateRegionFactory(RegionShortcut.CACHING_PROXY);

IRegion<string, string> region = regionFactory
    .SetLruEntriesLimit(20000)
    .SetInitialCapacity(20000)
    .Create<string, string>("exampleRegion");
```


