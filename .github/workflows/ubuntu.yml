name: Ubuntu CI

on: [push, pull_request]

jobs:
  rat:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: cache geode
      uses: actions/cache@v2
      id: cache-geode
      with:
        path: ~/apache-geode
        key: apache-geode
    - name: install geode
      env:
        CACHE_HIT: ${{steps.cache-geode.outputs.cache-hit}}
        GEODE_VERSION: 1.13.0
      run: |
        if [[ "$CACHE_HIT" != 'true' ]]; then
          wget "https://www.apache.org/dyn/closer.cgi?action=download&filename=geode/${GEODE_VERSION}/apache-geode-${GEODE_VERSION}.tgz" --quiet -O - | tar xzf - && mv apache-geode-${GEODE_VERSION} ~/apache-geode
        fi
    - name: install rat
      run: wget "https://www.apache.org/dyn/closer.cgi?action=download&filename=creadur/apache-rat-${RAT_VERSION}/apache-rat-${RAT_VERSION}-bin.tar.gz" --quiet -O - | tar xzf - && mv apache-rat-${RAT_VERSION} ..
      env:
        RAT_VERSION: 0.13
    - name: install doxygen
      run: sudo apt-get update && sudo apt-get install -yq doxygen
    - name: mkdir build
      run: mkdir build
    - name: cmake configure
      run: export GEODE_HOME=~/apache-geode && export RAT_HOME=$GITHUB_WORKSPACE/../apache-rat-$RAT_VERSION && cmake -Bbuild -DUSE_RAT=ON
      env:
        RAT_VERSION: 0.13
    - name: cmake rat check
      run: cmake --build build/ --target rat-check

  clangformat-version6:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: cache geode
      uses: actions/cache@v2
      id: cache-geode
      with:
        path: ~/apache-geode
        key: apache-geode
      env:
        GEODE_VERSION: 1.13.0
    - name: install geode
      env:
        CACHE_HIT: ${{steps.cache-geode.outputs.cache-hit}}
        GEODE_VERSION: 1.13.0
      run: |
        if [[ "$CACHE_HIT" != 'true' ]]; then
          wget "https://www.apache.org/dyn/closer.cgi?action=download&filename=geode/${GEODE_VERSION}/apache-geode-${GEODE_VERSION}.tgz" --quiet -O - | tar xzf - && mv apache-geode-${GEODE_VERSION} ~/apache-geode
        fi
    - name: install doxygen
      run: sudo apt-get update && sudo apt-get install -yq doxygen
    - name: mkdir build
      run: mkdir build
    - name: use clang 6
      run: sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-6.0 999 && sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-6.0 999 && sudo update-alternatives --install /usr/bin/cc cc /usr/bin/clang-6.0 999 && sudo update-alternatives --install /usr/bin/c++ c++ /usr/bin/clang++-6.0 999 && sudo update-alternatives --install /usr/bin/clang-format clang-format /usr/bin/clang-format-6.0 999
    - name: cmake configure
      run: export GEODE_HOME=~/apache-geode && cmake -Bbuild
    - name: cmake all-clangformat
      run: cmake --build build/ --target all-clangformat && git diff --exit-code

  build-and-unit-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-16.04, ubuntu-latest]
    steps:
    - uses: actions/checkout@v2
    - name: cache geode
      uses: actions/cache@v2
      id: cache-geode
      with:
        path: ~/apache-geode
        key: apache-geode
    - name: install geode
      env:
        CACHE_HIT: ${{steps.cache-geode.outputs.cache-hit}}
        GEODE_VERSION: 1.13.0
      run: |
        if [[ "$CACHE_HIT" != 'true' ]]; then
          wget "https://www.apache.org/dyn/closer.cgi?action=download&filename=geode/${GEODE_VERSION}/apache-geode-${GEODE_VERSION}.tgz" --quiet -O - | tar xzf - && mv apache-geode-${GEODE_VERSION} ~/apache-geode
        fi
    - name: install doxygen
      run: sudo apt-get update && sudo apt-get install -yq doxygen
    - name: mkdir build
      run: mkdir build
    - name: cmake configure
      run: export GEODE_HOME=~/apache-geode && cmake -Bbuild
    - name: cmake build
      run: cmake --build build/ --target apache-geode_unittests -- -j2
    - name: unit tests
      run: build/cppcache/test/apache-geode_unittests

  old-integration-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-16.04, ubuntu-latest]
    steps:
    - uses: actions/checkout@v2
    - name: cache geode
      uses: actions/cache@v2
      id: cache-geode
      with:
        path: ~/apache-geode
        key: apache-geode
    - name: install geode
      env:
        CACHE_HIT: ${{steps.cache-geode.outputs.cache-hit}}
        GEODE_VERSION: 1.13.0
      run: |
        if [[ "$CACHE_HIT" != 'true' ]]; then
          wget "https://www.apache.org/dyn/closer.cgi?action=download&filename=geode/${GEODE_VERSION}/apache-geode-${GEODE_VERSION}.tgz" --quiet -O - | tar xzf - && mv apache-geode-${GEODE_VERSION} ~/apache-geode
        fi
    - name: install doxygen
      run: sudo apt-get update && sudo apt-get install -yq doxygen
    - name: mkdir build
      run: mkdir build
    - name: cmake configure
      run: export GEODE_HOME=~/apache-geode && cmake -Bbuild
    - name: cmake build
      run: cmake --build build/ --target javaobject -- -j2 && cmake --build build/ --target unit_test_callbacks -- -j2 && cmake --build build/ --target cppcache-integration-tests -- -j2
    - name: old integration tests
      run: cd build/cppcache/integration-test/ && ctest --timeout 500 -L STABLE -C Debug -j1

  new-integration-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-16.04, ubuntu-latest]
    steps:
    - uses: actions/checkout@v2
    - name: cache geode
      uses: actions/cache@v2
      id: cache-geode
      with:
        path: ~/apache-geode
        key: apache-geode
    - name: install geode
      env:
        CACHE_HIT: ${{steps.cache-geode.outputs.cache-hit}}
        GEODE_VERSION: 1.13.0
      run: |
        if [[ "$CACHE_HIT" != 'true' ]]; then
          wget "https://www.apache.org/dyn/closer.cgi?action=download&filename=geode/${GEODE_VERSION}/apache-geode-${GEODE_VERSION}.tgz" --quiet -O - | tar xzf - && mv apache-geode-${GEODE_VERSION} ~/apache-geode
        fi
    - name: install doxygen
      run: sudo apt-get update && sudo apt-get install -yq doxygen
    - name: mkdir build
      run: mkdir build
    - name: cmake configure
      run: export GEODE_HOME=~/apache-geode && cmake -Bbuild
    - name: cmake build
      run: cmake --build build/ --target cpp-integration-test -- -j2
    - name: new integration tests
      run: cd build/cppcache/integration/test/ && ctest -E BasicIPv6Test -j2

  build-and-test-ipv6:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-16.04, ubuntu-latest]
    steps:
    - uses: actions/checkout@v2
    - name: cache geode
      uses: actions/cache@v2
      id: cache-geode
      with:
        path: ~/apache-geode
        key: apache-geode
    - name: install geode
      env:
        CACHE_HIT: ${{steps.cache-geode.outputs.cache-hit}}
        GEODE_VERSION: 1.13.0
      run: |
        if [[ "$CACHE_HIT" != 'true' ]]; then
          wget "https://www.apache.org/dyn/closer.cgi?action=download&filename=geode/${GEODE_VERSION}/apache-geode-${GEODE_VERSION}.tgz" --quiet -O - | tar xzf - && mv apache-geode-${GEODE_VERSION} ~/apache-geode
        fi
    - name: install doxygen
      run: sudo apt-get update && sudo apt-get install -yq doxygen
    - name: mkdir build
      run: mkdir build
    - name: cmake configure
      run: export GEODE_HOME=~/apache-geode && cmake -Bbuild -DWITH_IPV6=ON
    - name: cmake build
      run: cmake --build build/ --target cpp-integration-test -- -j2
    - name: BasicIPv6Test
      run: cd build/cppcache/integration/test/ && ctest -R BasicIPv6Test -j1
