#! Licensed to the Apache Software Foundation (ASF) under one or more
#! contributor license agreements.  See the NOTICE file distributed with
#! this work for additional information regarding copyright ownership.
#! The ASF licenses this file to You under the Apache License, Version 2.0
#! (the "License"); you may not use this file except in compliance with
#! the License.  You may obtain a copy of the License at
#!
#!      http://www.apache.org/licenses/LICENSE-2.0
#!
#! Unless required by applicable law or agreed to in writing, software
#! distributed under the License is distributed on an "AS IS" BASIS,
#! WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#! See the License for the specific language governing permissions and
#! limitations under the License.

#@ load("templates.lib.yml",
#@      "git_resource",
#@      "gci_resource",
#@      "image_family_name",
#@      "registry_image_resource",
#@      "build_job_name",
#@      "packer_job",
#@      "packer_job_name",
#@      "docker_job",
#@      "docker_job_name",
#@      "update_pipeline_job",
#@      "update_pipeline_job_name",
#@      "version_source_job",
#@      "version_source_job_name")
#@ load("@ytt:data", "data")
#@ load("@ytt:overlay", "overlay")
#@ load("@ytt:struct", "struct")
#@ load("@ytt:template", "template")

---
#@ def pr_status(context, status, description = None):
try:
  put: #@ "pr-status-" + status
  resource: source
  params:
    path: source
    status: #@ status
    context: #@ context
    description: #@ description
  get_params:
    skip_download: true
  attempts: 5
#@ end

#@overlay/match by=overlay.all
---
resource_types:
  #@overlay/append
  - name: pull-request
    type: docker-image
    source:
      repository: teliaoss/github-pr-resource

resources:
  #@overlay/match by="name"
  #@overlay/replace
  - name: source
    type: pull-request
    check_every: 1m
    icon: github
    source:
      #@ parts = data.values.repository.url.rstrip(".git").rsplit("/", 2)
      repository: #@ parts[1] + "/" + parts[2]
      access_token: ((github-access-token))
      base_branch: #@ data.values.repository.branch

#@overlay/match-child-defaults missing_ok=True
jobs:
  #@ for build in data.values.builds:
  #@ for config in data.values.configs:
  #@ name = build_job_name(build, config)
  #@overlay/match by="name", missing_ok=True
  - name: #@ name
    plan:
      #@overlay/match by=overlay.index(0)
      - in_parallel:
          fail_fast: true
          steps:
            #@overlay/match by=overlay.subset({"get": "source"})
            - get: source
              version: every
              on_success: #@ pr_status(name, "pending")
    on_error:
      in_parallel:
        steps:
          #@overlay/append
          - #@ pr_status(name, "error")
    on_abort:
      in_parallel:
        steps:
          #@overlay/append
          - #@ pr_status(name, "error", "Build canceled")
    on_failure:
      in_parallel:
        steps:
          #@overlay/append
          - #@ pr_status(name, "failure")
    on_success:
      in_parallel:
        steps:
          #@overlay/append
          - #@ pr_status(name, "success")

            #@ end
          #@ end
