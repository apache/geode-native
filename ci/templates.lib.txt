# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

(@ load("@ytt:data", "data") -@)


(@ def google_variables(): -@)
GOOGLE_PROJECT=(@=data.values.google.project @)
GOOGLE_ZONE=(@=data.values.google.zone @)
(@- end @)


(@ def instance_variables(): -@)
INSTANCE_USER=build
INSTANCE_DIR=$(pwd)/instance

if [ ! -d "${INSTANCE_DIR}" ]; then
  echo "${INSTANCE_DIR} not found."
  exit 1
fi
(@- end @)

(@ def remote_functions(): -@)
(@=instance_variables() @)

SSH_OPTIONS=${SSH_OPTIONS:-"-o StrictHostKeyChecking=no -o PasswordAuthentication=no"}

ssh_key_file=${INSTANCE_DIR}/identity
if [ ! -r "${ssh_key_file}" ]; then
  echo "${ssh_key_file} not readable."
  exit 1
fi

instance_file=${INSTANCE_DIR}/instance.json
if [ ! -r "${instance_file}" ]; then
  echo "${instance_file} not readable."
  exit 1
fi

external_ip=$(jq -r '.[0].networkInterfaces[0].accessConfigs[0].natIP' ${instance_file})

function remote_shell {
  ssh ${SSH_OPTIONS} -i ${ssh_key_file} ${INSTANCE_USER}@${external_ip} "$@"
}

function remote_copy {
  scp ${SSH_OPTIONS} -i ${ssh_key_file} "${INSTANCE_USER}@${external_ip}:${1}" "$2"
}

function remote_copy_recursive {
  scp ${SSH_OPTIONS} -i ${ssh_key_file} -q -r "${INSTANCE_USER}@${external_ip}:${1}" "$2"
}

(@- end @)

(@ def run_cpp_unit_tests(): -@)
remote_shell taskkill /t /f /im ctest.exe /im apache-geode_unittests.exe || true
remote_shell 'pkill ^ctest$; pkill ^apache-geode_unittests$' || true
remote_shell cmake -E chdir build/cppcache/test ctest -C ${CMAKE_CONFIG} -j8 --timeout=500 --output-on-failure --rerun-failed
(@- end @)

(@ def run_cpp_integration_tests(): -@)
remote_shell taskkill /t /f /im ctest.exe /im cpp-integration-test.exe /im java.exe || true
remote_shell 'pkill ^ctest$; pkill ^cpp-integration-test$; pkill ^java$' || true
remote_shell cmake -E chdir build/cppcache/integration/test ctest -C ${CMAKE_CONFIG} -j8 --timeout=500 --output-on-failure --rerun-failed -E ^BasicIPv6Test
(@- end @)

(@ def run_cpp_legacy_integration_tests(): -@)

remote_shell taskkill /t /f /im ctest.exe /im test* /im java.exe || true
remote_shell 'pkill ^ctest$; pkill ^test; pkill ^java$' || true
remote_shell cmake -E chdir build/cppcache/integration-test ctest -C ${CMAKE_CONFIG} -j6 --timeout=500 --output-on-failure --rerun-failed
(@- end @)

(@ def run_net_unit_tests(): -@)
remote_shell taskkill /t /f /im xunit.console.exe || true
remote_shell cmake -E chdir build/clicache/test2 ../packages/xunit.runner.console.2.4.0/tools/net452/xunit.console.exe ${CMAKE_CONFIG}/Apache.Geode.Tests2.dll -parallel all
(@- end @)

(@ def run_net_integration_tests(): -@)
remote_shell taskkill /t /f /im xunit.console.exe /im java.exe || true
remote_shell cmake -E chdir build/clicache/integration-test2 ../packages/xunit.runner.console.2.4.0/tools/net452/xunit.console.exe ${CMAKE_CONFIG}/Apache.Geode.IntegrationTests2.dll -verbose -maxthreads 6
(@- end @)

(@ def run_net_legacy_integration_tests(): -@)
remote_shell taskkill /t /f /im ctest.exe /im nunit-console.exe /im nunit-agent.exe /im fwkclient.exe /im java.exe || true
remote_shell cmake -E chdir build/clicache/integration-test ctest -C ${CMAKE_CONFIG} -j6 --timeout=1000 --output-on-failure --rerun-failed
(@- end @)
