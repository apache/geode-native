#! Licensed to the Apache Software Foundation (ASF) under one or more
#! contributor license agreements.  See the NOTICE file distributed with
#! this work for additional information regarding copyright ownership.
#! The ASF licenses this file to You under the Apache License, Version 2.0
#! (the "License"); you may not use this file except in compliance with
#! the License.  You may obtain a copy of the License at
#!
#!      http://www.apache.org/licenses/LICENSE-2.0
#!
#! Unless required by applicable law or agreed to in writing, software
#! distributed under the License is distributed on an "AS IS" BASIS,
#! WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#! See the License for the specific language governing permissions and
#! limitations under the License.

#@ load("templates.lib.yml",
#@      "gcr_image_resource",
#@      "project_gcr_image_resource",
#@      "git_resource",
#@      "gci_resource",
#@      "registry_image_resource",
#@      "semver_resource",
#@      "image_family_name",
#@      "build_job",
#@      "build_job_name",
#@      "packer_job",
#@      "packer_job_name",
#@      "docker_job",
#@      "docker_job_name",
#@      "update_pipeline_job",
#@      "update_pipeline_job_name",
#@      "version_source_job",
#@      "version_source_job_name")
#@ load("@ytt:data", "data")
#@ load("@ytt:overlay", "overlay")
#@ load("@ytt:struct", "struct")

#@ def extends_build(build):
#@ return struct.make(**overlay.apply(data.values.default.build, build))
#@ end

resource_types:
  - name: gci
    type: docker-image
    source:
      repository: smgoller/gci-resource

resources:
  - #@ semver_resource("version", "1.14.0-build.0")
  - #@ gcr_image_resource("gcloud-image", "google.com/cloudsdktool/cloud-sdk", "alpine")
  - #@ project_gcr_image_resource("task-image", "geode-native-task")
  - #@ registry_image_resource("packer-image", "hashicorp/packer")
  - #@ registry_image_resource("ytt-image", "gerritk/ytt")
  - #@ git_resource("source", data.values.repository.url, data.values.repository.branch, ignore_paths=["ci/*", "packer/*"])
  - #@ git_resource("ci-source", data.values.repository.url, data.values.repository.branch, ["ci/*"])
  - #@ git_resource("packer-source", data.values.repository.url, data.values.repository.branch, ["packer/*"])
  #@ for build in data.values.builds:
  - #@ gci_resource(image_family_name(extends_build(build).image_family))
  - #@ gci_resource(extends_build(build).source_image_family)
    #@ end

jobs:
  #@ for build in data.values.builds:
  #@ for/end config in data.values.configs:
  - #@ build_job(extends_build(build), config)
  - #@ packer_job(extends_build(build))
  #@ end
  - #@ version_source_job()
  - #@ update_pipeline_job()
  - #@ docker_job("task-image", "ci-source", "ci/docker/task")

groups:
  - name: builds
    jobs:
      #@ for build in data.values.builds:
      #@ for/end config in data.values.configs:
      - #@ build_job_name(extends_build(build), config)
      #@ end
  - name: images
    jobs:
      #@ for/end build in data.values.builds:
      - #@ packer_job_name(extends_build(build))
      - #@ docker_job_name("task-image")
  - name: meta
    jobs:
      - #@ update_pipeline_job_name()
  - name: all
    jobs:
      #@ for build in data.values.builds:
      #@ for/end config in data.values.configs:
      - #@ build_job_name(extends_build(build), config)
      - #@ packer_job_name(extends_build(build))
      #@ end
      - #@ update_pipeline_job_name()
      - #@ docker_job_name("task-image")
      - #@ version_source_job_name()
