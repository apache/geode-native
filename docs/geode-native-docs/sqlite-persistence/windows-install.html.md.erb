---
title:  Windows Installation
---

<!--
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

This topic describes how to install the SQLite Persistence Manager on Windows.

The library has been tested with SQLite v3.7.14.1.

The *`product-dir`* directory refers to the path to the directory
that contains the built library.

The following libraries are required. The <code><i>product-dir</i>/bin</code> directory containing these libraries must be present in the Windows `PATH` environment variable, and that directory is added to `PATH` during the Geode product installation.

-   The `sqliteimpl.dll` and `Apache.Geode.Plugins.SQLite.dll` files are provided in <code><i>product-dir</i>/bin</code>.
-   For .NET C\# native client application development, you need to obtain the `System.Data.SQLite.dll` SQLite library, as described below. The library can be copied to <code><i>product-dir</i>/bin</code>.
-   For C++ native client application development, you need the `SqLite3.dll` SQLite Library. You create this library and make it available in the runtime linking path, or copied to <code><i>product-dir</i>/bin</code>, as described below.

## <a id="concept_E097592856274EFABE81426FF7312294__section_270FDD34D5D1460DAF0FD2DD4E8FB31A" class="no-quick-link"></a>Downloading Pre-built System.Data.SQLite.dll Binaries

If you are writing native client applications using the .NET caching API, obtain the SQLite library (version 3.12.2 or later) for Windows as follows:

1.  Access the System.Data.SQLite Download Page at the following URL: [http://system.data.sqlite.org/index.html/doc/trunk/www/downloads.wiki](http://system.data.sqlite.org/index.html/doc/trunk/www/downloads.wiki).
2.  Download the appropriate setup file for your .NET Framework installation and hardware architecture.
    -   For 64-bit Windows, under **Precompiled Binaries for 64-bit Windows (.NET Framework 4.5.1)** download `sqlite-netFx451-binary-bundle-x64-2013-1.0.101.0.zip`.

3.  Execute the setup .exe file, and follow the prompts in the installation wizard. Accept all default installation options.
4.  Copy the `C:\Program                         Files\System.Data.SQLite\2010\bin\System.Data.SQLite.dll` file to your distribution at <code>_product-dir_\bin</code>.

## <a id="concept_E097592856274EFABE81426FF7312294__section_FAB703D706D54311963399A714D466F9" class="no-quick-link"></a>Downloading, Building, and Installing the Library

If you are writing native client applications using the C++ caching API, you need to build the SQLite solution for your Windows platform architecture.

1.  Download the source code `sqlite-autoconf-NNNNNNN.tar.gz` file (where *NNNNNNN* corresponds to the version) for SQLite version 3.12.2 or later from [http://www.sqlite.org/download.html](http://www.sqlite.org/download.html).
2.  Extract the source code from the .tar.gz file. You may need to use CygWin or a Windows-compatible tar extraction tool.
3.  Using Visual Studio, build the version-specific SqLite solution either as a release or debug build:
    -   If you are using 64-bit Windows, use the x64 configuration.

4.  From the built files, copy the `SqLite3.dll` file to your distribution at <code><i>product-dir</i>/bin</code>.
