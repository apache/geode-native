---
title:  WHERE Clause
---

<!--
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

The optional WHERE clause defines the search criteria for the selection, filtering the set of elements specified by the FROM clause.

Without a WHERE clause, the SELECT projection list receives the entire collection or set of collections as specified in the FROM clause.

The query processor searches the collection for elements that match the conditions specified in the WHERE clause conditions. If there is an index on an expression matched by the WHERE clause, then the query processor may use the index to optimize the search and avoid iterating over the entire collection. 

A WHERE clause expression is a boolean condition that is evaluated for each element in the collection. If the expression evaluates to true for an element, the query processor passes that element on to the SELECT projection list. This example uses the WHERE clause to return the portfolio objects in the region that have a type xyz .

``` pre
SELECT DISTINCT * FROM /portfolios WHERE "type" = 'xyz'
```

The next query returns the set of all portfolios with a type of xyz and active status.

``` pre
SELECT DISTINCT * FROM /portfolios WHERE "type" = 'xyz' AND status = 'active'
```
