---
title:  Basic Region Access
---

<!--
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

In the context of a query, specify the name of a region by its full path, starting with a forward slash (/ ).

## <a id="security__section_789E081192A74B00B0E726EDC1C574C4" class="no-quick-link"></a>Object Attributes

You can access the Region object's public fields and methods from a region path, referred to as the region's attributes. Using this method, `/portfolios.name` returns "`portfolios`" and `/portfolios.name.length` returns `10` . An attribute is mapped to a Java class member in three possible ways with the following priority until a match is found. If the attribute is named x, then:

``` pre
public method getX()
public method x()
public field x
```

**Note:**
The term *attribute* in this context is not the same as a region attribute.

## <a id="security__section_D64CB943612640D6B899023E5D997DB2" class="no-quick-link"></a>Region Data

You can also access entry keys and entry data through the region:

-   `/portfolios.keySet` returns the `Set` of entry keys in the region
-   `/portfolios.entrySet` returns the `Set` of `Region.Entry` objects
-   `/portfolios.values` returns the Collection of entry values
-   `/portfolios` return the Collection of entry values.

The FROM clause `/portfolios.values` and `/portfolios` return the same 
thing.
Note that these collections are immutable.
Invoking modifier methods on them, such as `add` and `remove`,
result in an `UnsupportedOperationException`.
