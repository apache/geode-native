---
title:  Creating and Accessing a Cache
---

<!--
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

When you create a client cache, you are creating a client cache instance. You must provide some basic configuration information such as a connection name and cache initialization parameters for the client's cache instance.

When you create a cache, you provide the following input:

-   **Connection name**. Used in logging to identify both the distributed system connection and the cache instance. If you do not specify a connection name, a unique (but non-descriptive) default name is assigned.
-   **`cache.xml` to initialize the cache (if the initialization is not done programmatically)**. To modify the cache structure, edit `cache.xml` in your preferred text editor. No changes to the application code are required. If you do not specify a `cache.xml` file, you need to initialize the cache programmatically.

The `cache.xml` file contains XML declarations for cache, region, and region entry configuration.

This XML declares server connection pools and regions:

``` pre
<cache>
  <region name="clientRegion1" refid="PROXY">
    <region-attributes pool-name="serverPool1"/>
  </region>
  <region name="clientRegion2" refid="PROXY">
    <region-attributes pool-name="serverPool2"/>
  </region>
  <region name="localRegion3" refid="LOCAL"/>
  <pool name="serverPool1">
    <locator host="host1" port="40404"/>
  </pool>
  <pool name="serverPool2">
    <locator host="host2" port="40404"/>
  </pool>
</cache>
    
```

When you use the regions, the client regions connect to the servers through the pools named in their configurations.

This file can have any name, but is generally referred to as `cache.xml` .

For a list of the parameters in the `cache.xml` file, including the DTD, see [Cache Initialization File](../cache-init-file/chapter-overview.html).

To create your cache, call the `CacheFactory create` function.
The `cache` object it returns gives access to the client caching API. For example:

``` pre
CacheFactoryPtr cacheFactory = CacheFactory::createCacheFactory();
CachePtr cachePtr = cacheFactory->create();
    
```

**Note:** For more information on how to create a cache for C++ clients, see [Creating a Cache](../cpp-caching-api/creating-cache.html), or for .NET clients, see [Creating a Cache](../dotnet-caching-api/creating-a-cache.html).


