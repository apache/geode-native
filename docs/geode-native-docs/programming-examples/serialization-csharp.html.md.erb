---
title:  C# Serialization Example
---

<!--
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

This C# .NET example shows how to implement a user-defined Serializable object.

``` pre
class User : IGeodeSerializable
{
  private string m_name;
  private int m_userId;
  ExampleObject m_eo;
 
  public User(string name, int userId)
  {
    m_name = name;
    m_userId = userId;
    m_eo = new ExampleObject();
  }

  public User()
  {
    m_name = string.Empty;
    m_userId = 0;
    m_eo = new ExampleObject();
  }
 
  public int UserId
  {
    get
      {
        return m_userId;
      }
 
  }
 
  public string Name
  {
    get
      {
        return m_name;
      }
  }

  public ExampleObject EO
  {
    get
      {
        return m_eo;
      }
    set
      {
        m_eo = value;
      }
  }
 
  public override string ToString()
  {
    return string.Format("User: {0}, {1}\n{2}", m_userId, m_name,
                         m_eo.ToString());
  }
 
  // Our TypeFactoryMethod
  public static IGeodeSerializable CreateInstance()
  {
    return new User();
  }
 
#region IGeodeSerializable Members
 
  public UInt32 ClassId()
  {
    get
      {
        return 45; // must match Java
      }
  }
  
  public IGeodeSerializable FromData(DataInput input)
  {
    m_name = input.ReadUTF();
    m_userId = input.ReadInt32();
    m_eo.FromData(input);
    return this;
  }
 
  public void ToData(DataOutput output)
  {
    output.writeUTF(m_name);
    output.writeInt32(m_userId);
    eo.ToData(output);
  }
 
#endregion
}
```


