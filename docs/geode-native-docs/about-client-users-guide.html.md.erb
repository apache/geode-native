---
title: Apache Geode Client 1.3 Documentation
---

<!--
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

Published April 1, 2017

This documentation provides step-by-step procedures for installation, configuration, and development of clients.

-   **[C++ and .NET API](http://geode.apache.org/docs/)**

-   **[Getting Started with the Client](introduction/client-intro.html)**

    This section gives you a conceptual overview of the client. It shows you how to install the product, build client applications on various platforms, and run the product examples.

-   **[Setting System Properties](setting-properties/chapter-overview.html)**

    *Setting System Properties* describes how to configure Apache Geode clients and cache servers to participate in a distributed system.

-   **[Configuring the Client Cache](client-cache/chapter-overview.html)**

    This section describes the client cache functionality, initialization file, and APIs. It provides information about creating and working with caches, cache regions, and region entries.

-   **[C++ Client API](cpp-caching-api/cpp-caching-api.html)**

    This section describes the primary classes, and usage conventions for the C++ client API. It demonstrates how to use the API to create caches and perform data serialization. See the [C++ API](/releases/latest/api/cppdocs) documentation for API details.

-   **[.NET Client API](dotnet-caching-api/dotnet-caching-api.html)**

    This section describes the primary classes, usage conventions, and C++ to .NET class mappings of the client .NET API. It demonstrates how to use the API to create caches and perform data serialization. See the [.NET API](/releases/latest/api/dotnetdocs) documentation for API details.

-   **[Preserving Data](preserving-data/preserving-data.html)**

    A server may preserve the data queued and intended to be sent to a client, such that the data is not discarded if communication between the server and client is disrupted. Preservation prevents message loss, which can cause a client to have inconsistent data. Redundant queues and a high availability server implementation may further ensure that queued data is not lost.

-   **[Security](security/overviewsecurity.html)**

    *Security* describes how to implement the security framework for the Geode client, including authentication, authorization, ecryption, and SSL client/server communication.

-   **[Remote Querying](remote-querying/remote-querying.html)**

    *Remote Querying* documents remote querying from the client to the Geode cache server. Using examples and procedures, it describes how to use the APIs to run queries against cached data; work with query strings in the client; create and manage queries; and create indexes.

-   **[Continuous Querying](continuous-querying/continuous-querying.html)**

    *Continuous Querying* describes how to implement continuous querying in the Apache Geode client so that C++ and .NET clients can run queries against events in the Geode cache server region. It also describes main features and the client CQ API.

-   **[Using Connection Pools](connection-pools/connection-pools.html)**

    *Using Connection Pools* describes how connection pools achieve load balancing for the client and describes how to configure connection pools as server locators or as a list of servers.

-   **[Transactions](transactions/transactions.html)**

    *Transactions* describes how transactions work on the client side. It provides examples for running, suspending, and resuming transactions.

-   **[Function Execution](function-execution/function-execution.html)**

    *Function Execution* describes how you can execute application functions to achieve linear scalability. It explains how function execution works and lists specific use cases.

-   **[Delta Propagation](delta-propagation/delta-propagation.html)**

    *Delta Propagation* describes how deltas (updates to data) are propagated and how to implement delta propagation. It also analyzes performance limitations.

-   **[Programming Examples](programming-examples/programming-examples.html)**

    This chapter provides a set of programming examples to help you understand the Geode client API.

-   **[Interoperability of Language Classes and Types](type-mappings/chapter-overview.html)**

    *Interoperability of Language Classes and Types* provides a table that maps C++ class methods to corresponding .NET class methods and a table that maps Java types to .NET types.

-   **[System Statistics](system-statistics/chapter-overview.html)**

    *System Statistics* provides information on the statistics for caching and distribution activities.

-   **[Installing the SQLite Persistence Manager](sqlite-persistence/chapter-overview.html)**

    *Installing the SQLite Persistence Manager* describes how to download, build and install the SQLite database libraries for use with disk overflow.

-   **[Glossary](glossary.html)**

    This glossary defines terms used in the documentation.
