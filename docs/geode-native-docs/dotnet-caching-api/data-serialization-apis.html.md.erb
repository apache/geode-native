---
title:  Data Serialization APIs
---

<!--
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

Use either `IPdxSerializable` or `IGeodeSerializable` for each region. Do not mix the two.

For more information on these options, see [Data Serialization](dotnet-data-serialization.html#concept_28A7797A0342447ABF6A5014E0DCB05F).

-   **IPdxSerializable interface**. Provides a flexible way to serialize your domain objects for cache storage and transfer to the servers. This is a Geode built-in serialization framework. 
-   **IPdxReader**. Supplies operations for reading data from Geode IPDXSerializable types.
-   **IPdxWriter**. Provides operations for writing data into Geode IPDXSerializable types.
-   **IPdxInstance**. Instance of a PDX serialized object that you can use to access the objectâ€™s data without having to deserialize the object first.
-   **IPdxInstanceFactory**. Allows you to build an IPdxInstance using raw data.
-   **IPdxTypeMapper interface**. Allows you to map .NET type names to Java type names when using PDX serialization.
-   **IGeodeSerializable interface**. Superclass of one set of user objects that can be serialized and stored in the cache. These are Geode built-in serializable types.
-   **Serializable class**. Wraps the C++ `apache::geode::client::Serializable` objects as managed `IGeodeSerializable` objects. Whenever C++ clients and .NET clients interoperate and are part of the same distributed system, the user-defined types that are put by the C++ clients that have not been defined in .NET are returned as objects of this class.

    The API contains overloads for most Region methods and other methods that take `Serializable` as a value and that are more optimized than the more generic `IGeodeSerializable` overloads. The application prefers using these overloads whenever the base class of an object is `Serializable`.

-   **DataInput**. Supplies operations for reading primitive data values and user-defined objects from a byte stream.
-   **DataOutput**. Provides operations for writing primitive data values and user-defined objects implementing `IGeodeSerializable` to an integer.


