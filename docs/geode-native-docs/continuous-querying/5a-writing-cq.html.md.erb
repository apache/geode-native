---
title:  Writing the Continuous Query
---

<!--
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

Each CQ uses a query and any number of listeners. The query filters the events on the server and the listener handles the events that make it through the query filter. With the query and the listener in hand, you can create and execute your query through the API.

This is the basic syntax for the CQ query:

``` pre
SELECT * FROM /fullRegionPath [iterator] [WHERE clause]
```

The CQ query must satisfy the standard <%=vars.product_name%> native client querying specifications described in [Remote Querying](../remote-querying/remote-querying.html). It also must satisfy these restrictions:

-   The `FROM` clause must contain only a single region specification, with optional iterator variable.
-   The query must be a `SELECT` expression only, preceded by zero or more `IMPORT` statements. This means the query cannot be a statement like `/tradeOrder.name` or `(SELECT * from                     /tradeOrder).size`.
-   The CQ query cannot use:
    -   Cross region joins
    -   Drill-downs into nested collections
    -   `DISTINCT`
    -   Projections
    -   Bind parameters

Queries not meeting these constraints generate an `UnsupportedOperationException` from the `QueryServicenewCq` method.


