---
title:  Security
---

<!--
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

*Security* describes how to implement the security framework for the Geode native client, including authentication, authorization, encryption, and SSL client/server communication.

The security framework authenticates clients that attempt to connect to a Geode cache server and authorizes client cache operations. You can also configure it for client authentication of servers, and you can plug in your own implementations for authentication and authorization.

-   **[Authentication](overviewauthentication.html)**

    A client is authenticated when it connects, with valid credentials, to a Geode cache server that is configured with the client `Authenticator` callback.

-   **[Encrypted Authentication](encrypted-auth.html)**

    You can set up encrypted authentication using Diffe-Hellman or the sample PKCS implementation.

-   **[Client Authorization](overviewclientauthorization.html)**

    Using a provided callback that implements the `AccessControl` interface, you can configure each server to authorize some or all cache operations.

-   **[Security-Related System Properties (geode.properties)](security-systemprops.html)**

    The table describes the security-related system properties in the `geode.properties` file for native client authentication and authorization.

-   **[SSL Client/Server Communication](sslclientserver.html)**

    This section describes how to configure OpenSSL; implement SSL-based communication between your clients and servers; and run clients and servers with SSL enabled.


